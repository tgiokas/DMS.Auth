# This stage is used when running from VS in fast mode (Default for Debug configuration)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

# Install curl
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# This stage is used to build the service project
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["src/API/Authentication.Api.csproj", "src/API/"]
COPY ["src/Application/Authentication.Application.csproj", "src/Application/"]
COPY ["src/Domain/Authentication.Domain.csproj", "src/Domain/"]
COPY ["src/Infrastructure/Authentication.Infrastructure.csproj", "src/Infrastructure/"]
RUN dotnet restore "./src/API/Authentication.Api.csproj"
COPY . .
WORKDIR "src/API"
RUN dotnet build "./Authentication.Api.csproj" -c $BUILD_CONFIGURATION -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./Authentication.Api.csproj" -c $BUILD_CONFIGURATION -o /app/publish

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .

# --- minimal additions: copy the error catalog and set its path ---
COPY /error-codes/errors.json /app/errors.json
# ------------------------------------------------------------------

COPY ./certs/keycloak.crt /usr/local/share/ca-certificates/
RUN update-ca-certificates

ENTRYPOINT ["dotnet", "Authentication.Api.dll"]
